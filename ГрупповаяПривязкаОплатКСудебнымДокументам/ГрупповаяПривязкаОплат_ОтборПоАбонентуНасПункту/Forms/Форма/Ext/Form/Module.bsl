
Процедура ОбновитьСостояниеНадписиПериода()
	
	СтрЗаголококНадписи = "";
	Если Не ЗначениеЗаполнено(Объект.НачалоПериодаОплат) или Не ЗначениеЗаполнено(Объект.ОкончаниеПериодаОплат) Тогда
		СтрЗаголококНадписи = НСтр("ru='Не указан период!'");
	Иначе
		
		Если Объект.НачалоПериодаОплат > Объект.ОкончаниеПериодаОплат Тогда
			СтрЗаголококНадписи = "Не верно указан период!!!";
		Иначе 
			СтрЗаголококНадписи = ПредставлениеПериода(Объект.НачалоПериодаОплат, КонецДня(Объект.ОкончаниеПериодаОплат));
		КонецЕсли;	
			
	КонецЕсли;		

		
	
КонецПроцедуры

Процедура ЗаполнитьОплатами()
	Сортировка="";
	//Сортировка в запросе, зависит от сортировки в таблице типоыв оплат
	Если ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
		Сортировка = Сортировка + " СуммаНаГосПошлину УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
		Сортировка = Сортировка + " СуммаПени УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг тогда
		Сортировка = Сортировка + " СуммаНаОсновнойДолг УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы тогда
		Сортировка = Сортировка + " СуммаНаПрочиеСудебныеРасходы УБЫВ,";
	КонецЕСли;
	// 2 строка
	Если ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
		Сортировка = Сортировка + " СуммаНаГосПошлину УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
		Сортировка = Сортировка + " СуммаПени УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг тогда
		Сортировка = Сортировка + " СуммаНаОсновнойДолг УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы тогда
		Сортировка = Сортировка + " СуммаНаПрочиеСудебныеРасходы УБЫВ,";
	КонецЕСли;
	// 3 строка
	Если ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
		Сортировка = Сортировка + " СуммаНаГосПошлину УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
		Сортировка = Сортировка + " СуммаПени УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг тогда
		Сортировка = Сортировка + " СуммаНаОсновнойДолг УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы тогда
		Сортировка = Сортировка + " СуммаНаПрочиеСудебныеРасходы УБЫВ,";
	КонецЕСли;
	// 4 строка
	Если ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
		Сортировка = Сортировка + " СуммаНаГосПошлину УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
		Сортировка = Сортировка + " СуммаПени УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг тогда
		Сортировка = Сортировка + " СуммаНаОсновнойДолг УБЫВ,";
	ИначеЕСли ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы тогда
		Сортировка = Сортировка + " СуммаНаПрочиеСудебныеРасходы УБЫВ,";
	КонецЕСли;


	Сортировка =  Лев(Сортировка,СтрДлина(Сортировка)-1);

		 
		 
		 
		 
		 
		 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзысканиеЗадолженностиВСудебномПорядке.Абонент КАК Абонент
		|ПОМЕСТИТЬ СудебныеДокументы
		|ИЗ
		|	Документ.ВзысканиеЗадолженностиВСудебномПорядке КАК ВзысканиеЗадолженностиВСудебномПорядке
		|ГДЕ
		|	ВзысканиеЗадолженностиВСудебномПорядке.Проведен И &АбонентНасПункт
		|	И НЕ ВзысканиеЗадолженностиВСудебномПорядке.АвтоматическиПодбиратьОплаты
		|{ГДЕ
		|	ВзысканиеЗадолженностиВСудебномПорядке.Ссылка.* КАК ДокументВзысканиеЗадолженности,
		|	ВзысканиеЗадолженностиВСудебномПорядке.Абонент,
		|	ВзысканиеЗадолженностиВСудебномПорядке.СуммаЗадолженностиРешенияСуда,
		|	ВзысканиеЗадолженностиВСудебномПорядке.ОстатокПогасить КАК ОстатокЗадолженности,
		|	ВзысканиеЗадолженностиВСудебномПорядке.ОстатокГосПошлинаПогасить КАК ОстатокГосПошлина,
		|	ВзысканиеЗадолженностиВСудебномПорядке.ОстатокПениПогасить КАК ОстатокПени,
		|	ВзысканиеЗадолженностиВСудебномПорядке.ОстатокПрочиеСудебныеРасходыПогасить КАК ОстатокПрочиеСудебныеРасходы}
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОплатаОбороты.Абонент КАК Абонент,
		|	ОплатаОбороты.ВидОплаты КАК ВидОплаты,
		|	ОплатаОбороты.ДатаОплаты КАК ДатаОплаты,
		|	ОплатаОбороты.Регистратор КАК Квитанция,
		|	Сумма(ВЫБОР
		|		КОГДА НЕ(ОплатаОбороты.Услуга В (&ГосПошлина)
		|					ИЛИ ОплатаОбороты.Услуга В (&Пеня) или ОплатаОбороты.Услуга В (&Прочие))
		|			ТОГДА ЕСТЬNULL(ОплатаОбороты.СуммаОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПрочееОборот, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК СуммаОплатыВсего,
		|	Сумма(ВЫБОР
		|		КОГДА ОплатаОбороты.Услуга В (&Пеня)
		|			ТОГДА ЕСТЬNULL(ОплатаОбороты.СуммаОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПрочееОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПениОборот, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК СуммаПениВсего,
		|	Сумма(ВЫБОР
		|		КОГДА ОплатаОбороты.Услуга В (&ГосПошлина)
		|			ТОГДА ЕСТЬNULL(ОплатаОбороты.СуммаОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПрочееОборот, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК СуммаГосПошлиныВсего,
		|	Сумма(ВЫБОР
		|		КОГДА ОплатаОбороты.Услуга В (&Прочие)
		|			ТОГДА ЕСТЬNULL(ОплатаОбороты.СуммаОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПрочееОборот, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК СуммаПрочиеВсего,
		|	Сумма(ЕСТЬNULL(ОплатаОбороты.СуммаОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПениОборот, 0) + ЕСТЬNULL(ОплатаОбороты.СуммаПрочееОборот, 0)) КАК СуммаВКвитанции,
		|	КвитанцииПоСудебнымДеламОбороты.СуммаНаПогашениеОборот КАК СуммаНаПогашение,
		|	КвитанцииПоСудебнымДеламОбороты.СуммаНаТекущиеНачисленияОборот КАК СуммаНаТекущиеНачисления,
		|	СУММА(ДолгиПоСудебнымДеламОбороты.СуммаИскаРасход) КАК СуммаИскаПоРешениюРасход,
		|	СУММА(ДолгиПоСудебнымДеламОбороты.СуммаПениРасход) КАК СуммаПениРасход,
		|	СУММА(ДолгиПоСудебнымДеламОбороты.СуммаГосПошлиныРасход) КАК СуммаГосПошлиныРасход,
		|	СУММА(ДолгиПоСудебнымДеламОбороты.СуммаПрочихРасходовРасход) КАК СуммаПрочихРасходовРасход
		|ПОМЕСТИТЬ ВТВсеОплаты
		|ИЗ
		|	РегистрНакопления.Оплата.Обороты(
		|			&НачалоПериодаОплат,
		|			&КонецПериодаОплат,
		|			Регистратор,
		|			Абонент В
		|					(ВЫБРАТЬ
		|						СудебныеДокументы.Абонент
		|					ИЗ
		|						СудебныеДокументы КАК СудебныеДокументы)
		|				И ДокументРассрочки = НЕОПРЕДЕЛЕНО {(Абонент).*, (Услуга.ВидУслуги).*, (ВидОплаты).*}) КАК ОплатаОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КвитанцииПоСудебнымДеламДоговорамРассрочки.Обороты(
		|				,
		|				,
		|				,
		|				Абонент В
		|					(ВЫБРАТЬ
		|						СудебныеДокументы.Абонент
		|					ИЗ
		|						СудебныеДокументы КАК СудебныеДокументы)) КАК КвитанцииПоСудебнымДеламОбороты
		|		ПО ОплатаОбороты.Регистратор = КвитанцииПоСудебнымДеламОбороты.Квитанция
		|			И ОплатаОбороты.Абонент = КвитанцииПоСудебнымДеламОбороты.Абонент
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДолгиПоСудебнымДелам.Обороты(
		|				,
		|				,
		|				Регистратор,
		|				СудебныйДокумент.Абонент В
		|					(ВЫБРАТЬ
		|						СудебныеДокументы.Абонент
		|					ИЗ
		|						СудебныеДокументы КАК СудебныеДокументы)) КАК ДолгиПоСудебнымДеламОбороты
		|		ПО ОплатаОбороты.Абонент = ДолгиПоСудебнымДеламОбороты.СудебныйДокумент.Абонент
		|			И ОплатаОбороты.Регистратор = ДолгиПоСудебнымДеламОбороты.Регистратор.ДокументОплаты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОплатаОбороты.Абонент,
		|	ОплатаОбороты.ВидОплаты,
		|	ОплатаОбороты.ДатаОплаты,
		|	ОплатаОбороты.Регистратор,
		|	КвитанцииПоСудебнымДеламОбороты.СуммаНаПогашениеОборот,
		|	КвитанцииПоСудебнымДеламОбороты.СуммаНаТекущиеНачисленияОборот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВсеОплаты.Абонент КАК Абонент,
		|	ВТВсеОплаты.ВидОплаты КАК ВидОплаты,
		|	ВТВсеОплаты.ДатаОплаты КАК ДатаОплаты,
		|	ВТВсеОплаты.Квитанция КАК Квитанция,
		|	ВТВсеОплаты.СуммаВКвитанции КАК СуммаВКвитанции,
		|	ЕСТЬNULL(ВТВсеОплаты.СуммаВКвитанции, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаНаПогашение, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаНаТекущиеНачисления, 0) КАК ОстатокПоКвитанции,
		|	ЕСТЬNULL(ВТВсеОплаты.СуммаОплатыВсего, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаНаТекущиеНачисления, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаИскаПоРешениюРасход, 0) КАК СуммаНаОсновнойДолг,
		|	ЕСТЬNULL(ВТВсеОплаты.СуммаПениВсего, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаПениРасход, 0) КАК СуммаПени,
		|	ЕСТЬNULL(ВТВсеОплаты.СуммаГосПошлиныВсего, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаГосПошлиныРасход, 0) КАК СуммаНаГосПошлину,
		|	ЕСТЬNULL(ВТВсеОплаты.СуммаПрочиеВсего, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаПрочихРасходовРасход, 0) КАК СуммаНаПрочиеСудебныеРасходы
		|ИЗ
		|	ВТВсеОплаты КАК ВТВсеОплаты
		|ГДЕ
		|	ЕСТЬNULL(ВТВсеОплаты.СуммаВКвитанции, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаНаПогашение, 0) - ЕСТЬNULL(ВТВсеОплаты.СуммаНаТекущиеНачисления, 0) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Абонент,  " + Сортировка;
	
	
	Если ЗначениеЗаполнено(Объект.Абонент) или ЗначениеЗаполнено(Объект.НаселенныйПункт) Тогда
		
		Если ЗначениеЗаполнено(Объект.Абонент) и ЗначениеЗаполнено(Объект.НаселенныйПункт) Тогда 
		
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&АбонентНасПункт"," ВзысканиеЗадолженностиВСудебномПорядке.Абонент = &Абонент И ВзысканиеЗадолженностиВСудебномПорядке.Абонент.Владелец = &НаселенныйПункт")
			
		ИначеЕсли ЗначениеЗаполнено(Объект.Абонент) Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&АбонентНасПункт"," ВзысканиеЗадолженностиВСудебномПорядке.Абонент = &Абонент ");
			
		ИначеЕсли ЗначениеЗаполнено(Объект.НаселенныйПункт) Тогда
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&АбонентНасПункт"," ВзысканиеЗадолженностиВСудебномПорядке.Абонент.Владелец = &НаселенныйПункт")
			
		КонецЕсли;	
		
	Иначе
		Запрос.УстановитьПараметр("АбонентНасПункт", Истина);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("КонецПериодаОплат", КонецДня(Объект.ОкончаниеПериодаОплат));
	Запрос.УстановитьПараметр("НачалоПериодаОплат", НачалоДня(Объект.НачалоПериодаОплат));
	Запрос.УстановитьПараметр("госПошлина", УслугиГосПошлины);
	Запрос.УстановитьПараметр("Пеня", УслугиПени);
	Запрос.УстановитьПараметр("Прочие", ПрочиеУслуги);                 
	
	Запрос.УстановитьПараметр("Абонент", Объект.Абонент);
	Запрос.УстановитьПараметр("НаселенныйПункт", Объект.НаселенныйПункт);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() Тогда 

		ТЗОплат = РезультатЗапроса.Выгрузить();

		Объект.ТабличнаяЧасть1.Загрузить(ТЗОплат);
		
	КонецЕсли;		
	
	
КонецПроцедуры

Процедура ПодобратьВзыскание()
	МассивАбонентов = Объект.ТабличнаяЧасть1.Выгрузить(,"Абонент");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзысканиеЗадолженностиВСудебномПорядке.Абонент КАК Абонент,
		|	ВзысканиеЗадолженностиВСудебномПорядке.Ссылка КАК Взыскание,
		|	ДолгиПоСудебнымДеламОстатки.СуммаИскаОстаток КАК СуммаИскаПоРешениюОстаток,
		|	ДолгиПоСудебнымДеламОстатки.СуммаГосПошлиныОстаток КАК СуммаГосПошлиныОстаток,
		|	ДолгиПоСудебнымДеламОстатки.СуммаПениОстаток КАК СуммаПениОстаток,
		|	ДолгиПоСудебнымДеламОстатки.СуммаПрочихРасходовОстаток КАК СуммаПрочихРасходовОстаток,
		|	ДолгиПоСудебнымДеламОстатки.ИтогоДолгОстаток КАК ИтогоДолгОстаток,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаИскаОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаИскаОстаток, 0)
		|	КОНЕЦ КАК ОсновнойДолгСУчетомТекущегоРаспределения,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаГосПошлиныОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаГосПошлиныОстаток, 0)
		|	КОНЕЦ КАК ГосПошлинаСУчетомТекущегоРаспределения,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаПениОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаПениОстаток, 0)
		|	КОНЕЦ КАК ПеняСУчетомТекущегоРаспределения,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаПрочихРасходовОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДолгиПоСудебнымДеламОстатки.СуммаПрочихРасходовОстаток, 0)
		|	КОНЕЦ КАК ПрочиеСУчетомТекущегоРаспределения
		|ИЗ
		|	РегистрНакопления.ДолгиПоСудебнымДелам.Остатки(, СудебныйДокумент.Абонент В (&Абонент)) КАК ДолгиПоСудебнымДеламОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВзысканиеЗадолженностиВСудебномПорядке КАК ВзысканиеЗадолженностиВСудебномПорядке
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияДоговоровРассрочки.СрезПоследних КАК СостоянияДоговоровРассрочкиСрезПоследних
		|			ПО (СостоянияДоговоровРассрочкиСрезПоследних.Документ = ВзысканиеЗадолженностиВСудебномПорядке.Ссылка)
		|		ПО ДолгиПоСудебнымДеламОстатки.СудебныйДокумент = ВзысканиеЗадолженностиВСудебномПорядке.Ссылка
		|ГДЕ
		|	ВзысканиеЗадолженностиВСудебномПорядке.Абонент В(&Абонент)
		|	И ДолгиПоСудебнымДеламОстатки.ИтогоДолгОстаток <> 0
		|	И ЕСТЬNULL(СостоянияДоговоровРассрочкиСрезПоследних.РаботаЗавершена, ЛОЖЬ) <> ИСТИНА
		|	И НЕ ВзысканиеЗадолженностиВСудебномПорядке.АвтоматическиПодбиратьОплаты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Абонент,
		|	ВзысканиеЗадолженностиВСудебномПорядке.ПериодВзысканияС";
	
	Запрос.УстановитьПараметр("Абонент", МассивАбонентов);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСудебныхДел = РезультатЗапроса.Выгрузить();
	
	
	ВсегоСтрокВТЧ = Объект.ТабличнаяЧасть1.Количество();
	Для нНомерСтроки = 0 По  ВсегоСтрокВТЧ - 1 Цикл 
		
		строкаТЧ = Объект.ТабличнаяЧасть1.Получить(нНомерСтроки);     
		
		Если СтрокаТЧ.Взыскание = Документы.ВзысканиеЗадолженностиВСудебномПорядке.ПустаяСсылка() Тогда 
			ОстатокПоПлатежке = СтрокаТЧ.ОстатокПоКвитанции;
			РаспределеноПоПлатежке = 0;
			ВзысканияПоАбоненту = ТаблицаСудебныхДел.НайтиСтроки(Новый Структура("Абонент", СтрокаТЧ.Абонент));
			Если ВзысканияПоАбоненту.количество()>0 Тогда 
				// обнуляем все переменные
				МожемРаспределитьНаГосПошлину=0;
				МожемРаспределитьНаПени=0;
				МожемРаспределитьНаОсновнойДолг=0;
				МожемРаспределитьПрочиеРасходы=0; 
				
				остатокПоГоспошлине = 0;
				ОстатокПОПЕНЕ = 0;
				ОстатокПоПРочим = 0;
				
				
				Для инд=0 по  ВзысканияПоАбоненту.количество()-1  Цикл  
					Если ОстатокПоПлатежке > 0 тогда
					// ЭТО ПЕРВУЮ СТРОКУ АНАЛИЗИРУЕМ
					Если ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
						Если  ПорядокРаспределенияОплат[0].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаГосПошлину=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаГосПошлину>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаГосПошлину,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								остатокПоГоспошлине =ОстатокПоПлатежке;// - МожемРаспределитьНаГосПошлину;     Если вычтем сразу Можем распредлить, то остаток неправильно посчитается
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
								
							Иначе
								МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
							КонецЕСли;
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
						Если  ПорядокРаспределенияОплат[0].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаПени=0;
						Иначе
							Если  СтрокаТЧ.СуммаПени>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаПени = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаПени,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								остатокПоПене =ОстатокПоПлатежке;// - МожемРаспределитьНаПени; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
							Иначе
								Если ОстатокПоПлатежке>0 тогда
									МожемРаспределитьНаПени = мин(ОстатокПоПлатежке,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								КонецЕСли;
							КонецЕСли;
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг  тогда
						Если  ПорядокРаспределенияОплат[0].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаОсновнойДолг=0;
						Иначе
							МожемРаспределитьНаОсновнойДолг = мин(ОстатокПоПлатежке,ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения);			
						КонецЕСли;
						
					ИначеЕсли ПорядокРаспределенияОплат[0].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы  тогда
						Если  ПорядокРаспределенияОплат[0].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьПрочиеРасходы=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы>0 тогда //Это оплатили имено по прочим услугам
								МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);			
								остатокПоПрочим =ОстатокПоПлатежке;// - МожемРаспределитьПрочиеРасходы; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
							Иначе
								МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);
							КонецЕСли;	
						КонецЕсли;
					КонецЕСли;
					
							
					// ЭТО ВТОРУЮ СТРОКУ АНАЛИЗИРУЕМ
					Если ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
						Если  ПорядокРаспределенияОплат[1].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаГосПошлину=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаГосПошлину>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаГосПошлину,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								остатокПоГоспошлине =ОстатокПоПлатежке;// - МожемРаспределитьНаГосПошлину; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
								
							Иначе
								Если ОстатокПоПлатежке>0  тогда
									МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке- МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг - МожемРаспределитьПрочиеРасходы,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								КонецЕСли;
							КонецЕСли;
							//остатокПоГоспошлине =ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину; 
							//ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
						Если  ПорядокРаспределенияОплат[1].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаПени=0;
						Иначе
							Если  СтрокаТЧ.СуммаПени>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаПени = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаПени,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								остатокПоПене =ОстатокПоПлатежке;// - МожемРаспределитьНаПени; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
							Иначе
								Если ОстатокПоПлатежке>0 тогда
									МожемРаспределитьНаПени = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаОсновнойДолг - МожемРаспределитьПрочиеРасходы,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								КонецЕСли;
							КонецЕСли;
							//остатокПоПене =ОстатокПоПлатежке - МожемРаспределитьНаПени; 
							//ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг  тогда
						Если  ПорядокРаспределенияОплат[1].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаОсновнойДолг=0;
						Иначе
							Если ОстатокПоПлатежке>0  тогда
								МожемРаспределитьНаОсновнойДолг = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьПрочиеРасходы ,ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения);			
							КонецЕСли;	
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[1].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы  тогда
						Если  ПорядокРаспределенияОплат[1].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьПрочиеРасходы=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы>0 тогда //Это оплатили имено по прочим услугам
								МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);			
								остатокПоПрочим =ОстатокПоПлатежке; // - МожемРаспределитьПрочиеРасходы; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
							Иначе
								Если ОстатокПоПлатежке>0  тогда
									МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);
								КонецЕСли;	
							КонецЕСли;	
						КонецЕсли;	
					КонецЕСли;		
					
					// ЭТО ТРЕТЬЮ СТРОКУ АНАЛИЗИРУЕМ
					Если ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
						Если  ПорядокРаспределенияОплат[2].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаГосПошлину=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаГосПошлину>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаГосПошлину,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								остатокПоГоспошлине =ОстатокПоПлатежке;// - МожемРаспределитьНаГосПошлину; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
								
							Иначе
								Если ОстатокПоПлатежке>0 тогда
									МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке- МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг - МожемРаспределитьПрочиеРасходы,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								КонецЕСли;	
							КонецЕСли;
							//остатокПоГоспошлине =ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину; 
							//ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
						Если  ПорядокРаспределенияОплат[2].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаПени=0;
						Иначе
							Если  СтрокаТЧ.СуммаПени>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаПени = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаПени,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								остатокПоПене =ОстатокПоПлатежке;// - МожемРаспределитьНаПени; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
							Иначе
								Если ОстатокПоПлатежке>0 тогда
									МожемРаспределитьНаПени = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаОсновнойДолг - МожемРаспределитьПрочиеРасходы,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								КонецЕСли;
							КонецЕСли;
							//остатокПоПене =ОстатокПоПлатежке - МожемРаспределитьНаПени; 
							//ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг  тогда
						Если  ПорядокРаспределенияОплат[2].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаОсновнойДолг=0;
						Иначе
							Если ОстатокПоПлатежке>0  тогда
								МожемРаспределитьНаОсновнойДолг = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьПрочиеРасходы ,ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения);			
							КонецЕСли;
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[2].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы  тогда
						Если  ПорядокРаспределенияОплат[2].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьПрочиеРасходы=0;
							
						Иначе
							Если  СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы>0 тогда //Это оплатили имено по прочим услугам
								МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);			
								остатокПоПрочим =ОстатокПоПлатежке;// - МожемРаспределитьПрочиеРасходы; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
							Иначе
								Если ОстатокПоПлатежке>0  тогда
									МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);
								КонецЕСли;
							КонецЕСли;
						КонецЕСли;	
					КонецЕСли;
					
					// ЭТО ЧЕТВЕРТУЮ СТРОКУ АНАЛИЗИРУЕМ
					Если ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.ГосПошлина тогда
						Если  ПорядокРаспределенияОплат[3].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаГосПошлину=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаГосПошлину>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаГосПошлину,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								остатокПоГоспошлине =ОстатокПоПлатежке;// - МожемРаспределитьНаГосПошлину; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
								
							Иначе
								Если ОстатокПоПлатежке>0 тогда
									МожемРаспределитьНаГосПошлину = мин(ОстатокПоПлатежке- МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг - МожемРаспределитьПрочиеРасходы,ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения);
								КонецЕСли;	
							КонецЕСли;
							//остатокПоГоспошлине =ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину; 
							//ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.Пеня тогда
						Если  ПорядокРаспределенияОплат[3].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаПени=0;
						Иначе
							Если  СтрокаТЧ.СуммаПени>0 тогда // значит абонент заплатил именно за гос пошлину.
								// но первая оплата может быть по пене...знеачит в зависимости от порядка типов долгов надо сортировку настроить
								МожемРаспределитьНаПени = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаПени,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								остатокПоПене =ОстатокПоПлатежке;// - МожемРаспределитьНаПени; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
							Иначе
								Если ОстатокПоПлатежке>0 тогда
									МожемРаспределитьНаПени = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаОсновнойДолг - МожемРаспределитьПрочиеРасходы,ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения);
								КонецЕСли;
							КонецЕСли;
							//остатокПоПене =ОстатокПоПлатежке - МожемРаспределитьНаПени; 
							//ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
						
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.ОсновнойДолг  тогда
						Если  ПорядокРаспределенияОплат[3].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьНаОсновнойДолг=0;
						Иначе
							Если ОстатокПоПлатежке>0  тогда
								МожемРаспределитьНаОсновнойДолг = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьПрочиеРасходы ,ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения);			
							КонецЕСли;
						КонецЕСли;
					ИначеЕсли ПорядокРаспределенияОплат[3].ВидДолга = ПЕречисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы  тогда
						Если  ПорядокРаспределенияОплат[3].НеРаспределять = истина тогда // если не распределять, тогда 0 сразу
							МожемРаспределитьПрочиеРасходы=0;
						Иначе
							Если  СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы>0 тогда //Это оплатили имено по прочим услугам
								МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке,СтрокаТЧ.СуммаНаПрочиеСудебныеРасходы,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения);			
								остатокПоПрочим =ОстатокПоПлатежке;// - МожемРаспределитьПрочиеРасходы; 
								ОстатокПоПлатежке=0; // обнуляем, так как оплата именно на гос пошлину и дальше ее не надо распределять на ГП Судебного докусмента следующего 
							Иначе
								Если ОстатокПоПлатежке>0  тогда
									МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг,ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения); //ВзысканияПоАбоненту[инд].СуммаПрочихРасходовОстаток);
								КонецЕСли;
							КонецЕСли;
							//МожемРаспределитьПрочиеРасходы = мин(ОстатокПоПлатежке - МожемРаспределитьНаГосПошлину - МожемРаспределитьНаПени - МожемРаспределитьНаОсновнойДолг,ВзысканияПоАбоненту[инд].СуммаПрочихРасходовОстаток);			
						КонецЕСли;	
					КонецЕСли;

					
					
					////////////////////////// НАЧИНАЕМ ЗАПИСЫВАТЬ В ТЧ
					Если  МожемРаспределитьНаОсновнойДолг>0 или МожемРаспределитьНаГосПошлину>0  или МожемРаспределитьНаПени>0 или МожемРаспределитьПрочиеРасходы>0  Тогда
						
						Если инд=0 Тогда 
							СтрокаТЧ.Взыскание = ВзысканияПоАбоненту[инд].Взыскание;
							СтрокаТЧ.ДолгПоВзысканию = ВзысканияПоАбоненту[инд].ИтогоДолгОстаток;
							
							СтрокаТЧ.НаПогашениеОсновногоДолга =  МожемРаспределитьНаОсновнойДолг;
							ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения  -  СтрокаТЧ.НаПогашениеОсновногоДолга;
							
							СтрокаТЧ.НаПогашениеГосПошлины = МожемРаспределитьНаГосПошлину;
							ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения  -  СтрокаТЧ.НаПогашениеГосПошлины;
							
							СтрокаТЧ.НаПогашениеПени =  МожемРаспределитьНаПени;
							ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения - СтрокаТЧ.НаПогашениеПени ;
							
							СтрокаТЧ.НаПогашениеПрочихСудебныхРасходов = МожемРаспределитьПрочиеРасходы;
							ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения = ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения - СтрокаТЧ.НаПогашениеПрочихСудебныхРасходов;
							
							РаспределеноПоПлатежке = РАспределеноПоПлатежке+ СтрокаТЧ.НаПогашениеОсновногоДолга  +СтрокаТЧ.НаПогашениеГосПошлины + СтрокаТЧ.НаПогашениеПени;
							//ОстатокПоПлатежке = ОстатокПоПлатежке-РаспределеноПоПлатежке;
						ИначеЕсли  Инд>0 и  (ОстатокПоПлатежке>0 или остатокПоГоспошлине> 0 или ОстатокПОПЕНЕ> 0 Или ОстатокПоПРочим >0 или МожемРаспределитьНаОсновнойДолг>0 или МожемРаспределитьНаГосПошлину>0  или МожемРаспределитьНаПени>0 или МожемРаспределитьПрочиеРасходы>0) Тогда  
							ДопСтрока = Объект.ТабличнаяЧасть1.Добавить();
							ЗаполнитьЗначенияСвойств(ДопСтрока, СтрокаТЧ);
							
							ДопСтрока.Взыскание = ВзысканияПоАбоненту[инд].Взыскание;
							
							
							ДопСтрока.НаПогашениеГосПошлины =МожемРаспределитьНаГосПошлину;
							ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения  -  ДопСтрока.НаПогашениеГосПошлины;
							
 
							ДопСтрока.НаПогашениеПени = МожемРаспределитьНаПени;
							ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения - ДопСтрока.НаПогашениеПени ;
							  
							ДопСтрока.НаПогашениеОсновногоДолга =  МожемРаспределитьНаОсновнойДолг;
							ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения  -  ДопСтрока.НаПогашениеОсновногоДолга;
							

							ДопСтрока.НаПогашениеПрочихСудебныхРасходов = МожемРаспределитьПрочиеРасходы;
							ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения = ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения - ДопСтрока.НаПогашениеПрочихСудебныхРасходов;
							
							
							ДопСтрока.ОстатокПоКвитанции = ДопСтрока.СуммаНаОсновнойДолг + ДопСтрока.СуммаНаГосПошлину +  ДопСтрока.СуммаПени;
							
							//////////////////////
							ДопСтрока.ДолгПоВзысканию = ВзысканияПоАбоненту[инд].ИтогоДолгОстаток;
							
							//ДопСтрока.НаПогашениеОсновногоДолга = Мин(ДопСтрока.СуммаНаОсновнойДолг, ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения );
							//ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ОсновнойДолгСУчетомТекущегоРаспределения  -  ДопСтрока.НаПогашениеОсновногоДолга;
							//
							//ДопСтрока.НаПогашениеГосПошлины = Мин(ДопСтрока.СуммаНаГосПошлину, ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения );
							//ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ГосПошлинаСУчетомТекущегоРаспределения  -  ДопСтрока.НаПогашениеГосПошлины;
							//
							//ДопСтрока.НаПогашениеПени = Мин(ДопСтрока.СуммаПени, ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения );
							//ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ПеняСУчетомТекущегоРаспределения - ДопСтрока.НаПогашениеПени ;
							//
							//ДопСтрока.НаПогашениеПрочихСудебныхРасходов = Мин(ДопСтрока.СуммаНаПрочиеСудебныеРасходы, ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения );
							//ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения =   ВзысканияПоАбоненту[инд].ПрочиеСУчетомТекущегоРаспределения - ДопСтрока.НаПогашениеПрочихСудебныхРасходов ;
							//
							РаспределеноПоПлатежке = РАспределеноПоПлатежке+ ДопСтрока.СуммаНаОсновнойДолг  +ДопСтрока.СуммаНаГосПошлину + ДопСтрока.СуммаПени +ДопСтрока.СуммаНаПрочиеСудебныеРасходы;
							//ОстатокПоПлатежке = ОстатокПоПлатежке-РаспределеноПоПлатежке;
							
						КонецЕсли;
						ОстатокПоПлатежке = ОстатокПоПлатежке-РаспределеноПоПлатежке + остатокПоГоспошлине + ОстатокПОПЕНЕ + ОстатокПоПРочим;
						
												
					КонецЕсли;
					// Обнулим, чтобы при следующем проходе, не бралась уже распределенная цифра в расчет
					МожемРаспределитьНаГосПошлину=0;
					МожемРаспределитьНаПени=0;
					МожемРаспределитьНаОсновнойДолг=0;
					МожемРаспределитьПрочиеРасходы=0;

					КонецЕсли;
				КонецЦикла;			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	//Объект.ТабличнаяЧасть1.Сортировать("Абонент, ДАтаОплаты, СуммаВКвитанции");
	
КонецПроцедуры


Функция ПолучитьСтатусОплаты(строкаТЧ) 
	
	Если ЗначениеЗаполнено(строкаТЧ.Взыскание) и ЗначениеЗаполнено(строкаТЧ.ДатаОплаты) Тогда
		Если ЗначениеЗаполнено(строкаТЧ.Взыскание.ДатаНаправленияВСуд) Тогда
			Если строкаТЧ.Взыскание.ДатаНаправленияВСуд>строкаТЧ.ДатаОплаты Тогда
				Возврат Перечисления.СтатусыОплатАбонента.ПогашеноДоСуда;
			ИначеЕсли ЗначениеЗаполнено(строкаТЧ.Взыскание.ДатаРешенияСуда) Тогда
				Если строкаТЧ.Взыскание.ДатаРешенияСуда>строкаТЧ.ДатаОплаты Тогда
					Возврат Перечисления.СтатусыОплатАбонента.ПогашеноДоРешенияСуда;	
				Иначе
					Возврат Перечисления.СтатусыОплатАбонента.ПогашеноПослеСуда;
				КонецЕсли;	
			Иначе	
				Возврат Перечисления.СтатусыОплатАбонента.ПогашеноДоРешенияСуда;
			КонецЕсли;	
		Иначе	
			Возврат Перечисления.СтатусыОплатАбонента.ПогашеноДоРешенияСуда;
		КонецЕсли;	
		
	Иначе	
		Возврат Перечисления.СтатусыОплатАбонента.ПогашеноПослеСуда;
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьОплатамиКнопка1(Команда)
	Объект.ТабличнаяЧасть1.Очистить();
	ЗаполнитьОплатами();
	ПодобратьВзыскание();

КонецПроцедуры

&НаСервере
Процедура КнопкаВыполнитьНажатиеНаСервере()
	
	 СчетчикДокументов =  0;	
	
	НачатьТранзакцию();
	
	Если не ЗначениеЗаполнено(Объект.ДатаСоздаваемыхДокументов) Тогда 
		Сообщить("Заполните дату документов");
	Иначе 
		Для Каждого СтрокаТЧ из Объект.ТабличнаяЧасть1 Цикл 
			Если не СтрокаТЧ.Взыскание = Документы.ВзысканиеЗадолженностиВСудебномПорядке.ПустаяСсылка() Тогда
				Если СтрокаТЧ.НаПогашениеОсновногоДолга>0 Тогда 
					НоваяПривязка = Документы.ПривязкаОплат.СоздатьДокумент();
					НоваяПривязка.Дата = Объект.ДатаСоздаваемыхДокументов;
					//НоваяПривязка.Абонент = строкаТЧ.Абонент;
					НоваяПривязка.ТипОплат = Перечисления.ТипыОплатДолжников.ОсновнойДолг;
					НоваяПривязка.СтатусОплаты = ПолучитьСтатусОплаты(СтрокаТЧ);
					НоваяПривязка.ДокументОплаты = СтрокаТЧ.Квитанция;
					НоваяПривязка.ДокументОснование = СтрокаТЧ.Взыскание;
					НоваяПривязка.Сумма = СтрокаТЧ.СуммаВКвитанции;
					НоваяПривязка.НеРаспределено = СтрокаТЧ.ОстатокПоКвитанции;
					НоваяПривязка.СуммаНаПогашениеДолга = СтрокаТЧ.НаПогашениеОсновногоДолга;
					НоваяПривязка.Примечание = "#создано автоматически за период оплат с " + Формат(Объект.НачалоПериодаОплат, "ДФ=dd.MM.yyyy") + " по "  + Формат(Объект.ОкончаниеПериодаОплат, "ДФ=dd.MM.yyyy") ;
					НоваяПривязка.Автор = ПараметрыСеанса.ТекущийПользователь;
					Попытка
						НоваяПривязка.Записать(РежимЗаписиДокумента.Проведение);
						СчетчикДокументов = СчетчикДокументов + 1;
					Исключение
					КонецПопытки;
					
				КонецЕСли;
				Если  СтрокаТЧ.НаПогашениеГосПошлины>0 Тогда 
					НоваяПривязка = Документы.ПривязкаОплат.СоздатьДокумент();
					НоваяПривязка.Дата = Объект.ДатаСоздаваемыхДокументов;
					//НоваяПривязка.Абонент = строкаТЧ.Абонент;
					НоваяПривязка.ТипОплат = Перечисления.ТипыОплатДолжников.ГосПошлина;
					НоваяПривязка.СтатусОплаты = ПолучитьСтатусОплаты(СтрокаТЧ);
					НоваяПривязка.ДокументОплаты = СтрокаТЧ.Квитанция;
					НоваяПривязка.ДокументОснование = СтрокаТЧ.Взыскание;
					НоваяПривязка.Сумма = СтрокаТЧ.СуммаВКвитанции;
					НоваяПривязка.НеРаспределено = СтрокаТЧ.ОстатокПоКвитанции;
					НоваяПривязка.СуммаНаПогашениеДолга = СтрокаТЧ.НаПогашениеГосПошлины;
					НоваяПривязка.Примечание = "#создано автоматически за период оплат с " + Формат(Объект.НачалоПериодаОплат, "ДФ=dd.MM.yyyy") + " по "  + Формат(Объект.ОкончаниеПериодаОплат, "ДФ=dd.MM.yyyy") ;
					НоваяПривязка.Автор = ПараметрыСеанса.ТекущийПользователь;
					Попытка
						НоваяПривязка.Записать(РежимЗаписиДокумента.Проведение);
						СчетчикДокументов = СчетчикДокументов + 1;
					Исключение
					КонецПопытки;
					
				КонецЕСли;
				
				Если СтрокаТЧ.НаПогашениеПени>0 Тогда 
					НоваяПривязка = Документы.ПривязкаОплат.СоздатьДокумент();
					//НоваяПривязка.Абонент = строкаТЧ.Абонент;
					НоваяПривязка.Дата = Объект.ДатаСоздаваемыхДокументов;
					НоваяПривязка.ТипОплат = Перечисления.ТипыОплатДолжников.Пеня;
					НоваяПривязка.СтатусОплаты = ПолучитьСтатусОплаты(СтрокаТЧ);
					НоваяПривязка.ДокументОплаты = СтрокаТЧ.Квитанция;
					НоваяПривязка.ДокументОснование = СтрокаТЧ.Взыскание;
					НоваяПривязка.Сумма = СтрокаТЧ.СуммаВКвитанции;
					НоваяПривязка.НеРаспределено = СтрокаТЧ.ОстатокПоКвитанции;
					НоваяПривязка.СуммаНаПогашениеДолга = СтрокаТЧ.НаПогашениеПени;
					НоваяПривязка.Примечание = "#создано автоматически за период оплат с " + Формат(Объект.НачалоПериодаОплат, "ДФ=dd.MM.yyyy") + " по "  + Формат(Объект.ОкончаниеПериодаОплат, "ДФ=dd.MM.yyyy") ;
					НоваяПривязка.Автор = ПараметрыСеанса.ТекущийПользователь;
					Попытка
						НоваяПривязка.Записать(РежимЗаписиДокумента.Проведение);
						СчетчикДокументов = СчетчикДокументов + 1;
					Исключение
					КонецПопытки;
					
				КонецЕсли;
				
				Если СтрокаТЧ.НаПогашениеПрочихСудебныхРасходов>0 Тогда 
					НоваяПривязка = Документы.ПривязкаОплат.СоздатьДокумент();
					//НоваяПривязка.Абонент = строкаТЧ.Абонент;
					НоваяПривязка.Дата = Объект.ДатаСоздаваемыхДокументов;
					НоваяПривязка.ТипОплат = Перечисления.ТипыОплатДолжников.ПрочиеСудебныеРасходы;
					НоваяПривязка.СтатусОплаты = ПолучитьСтатусОплаты(СтрокаТЧ);
					НоваяПривязка.ДокументОплаты = СтрокаТЧ.Квитанция;
					НоваяПривязка.ДокументОснование = СтрокаТЧ.Взыскание;
					НоваяПривязка.Сумма = СтрокаТЧ.СуммаВКвитанции;
					НоваяПривязка.НеРаспределено = СтрокаТЧ.ОстатокПоКвитанции;
					НоваяПривязка.СуммаНаПогашениеДолга = СтрокаТЧ.НаПогашениеПрочихСудебныхРасходов;
					НоваяПривязка.Примечание = "#создано автоматически за период оплат с " + Формат(Объект.НачалоПериодаОплат, "ДФ=dd.MM.yyyy") + " по "  + Формат(Объект.ОкончаниеПериодаОплат, "ДФ=dd.MM.yyyy") ;
					НоваяПривязка.Автор = ПараметрыСеанса.ТекущийПользователь;
					Попытка
						НоваяПривязка.Записать(РежимЗаписиДокумента.Проведение);
						СчетчикДокументов = СчетчикДокументов + 1;
					Исключение
					КонецПопытки;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	ЗафиксироватьТранзакцию();
	
	Если СчетчикДокументов > 0 Тогда
		Сообщить("Создано " + СчетчикДокументов + " документов привязки оплаты к судебным делам");
		//Сообщить("ОбновитьЖурнал_СудебнаяРаботаПоАбонентам")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыполнитьНажатие1(Команда)
	КнопкаВыполнитьНажатиеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаОплатПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	 Объект.ОкончаниеПериодаОплат = КонецМесяца(Объект.НачалоПериодаОплат);
	Объект.ДатаСоздаваемыхДокументов = КонецМесяца(Объект.ОкончаниеПериодаОплат);
	//ОбновитьСостояниеНадписиПериода();

КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПериодаОплатПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Объект.ДатаСоздаваемыхДокументов = НачалоДня(КонецМесяца(Объект.ОкончаниеПериодаОплат))+1;
	//ОбновитьСостояниеНадписиПериода();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	ЗаполнитьТИпДолга();

КонецПроцедуры

&НаСервере
Функция ЗаполнитьТИпДолга()
	Если ПорядокРаспределенияОплат.Количество()=0 тогда
		Запрос = новый ЗАпрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ТипыОплатДолжников.Ссылка КАК Ссылка
		|ИЗ
		|	Перечисление.ТипыОплатДолжников КАК ТипыОплатДолжников
		|ГДЕ
		|	ТипыОплатДолжников.Ссылка <> ЗНАЧЕНИЕ(перечисление.ТИпыОплатДолжников.Рассрочка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() цикл
			Стр = ПорядокРаспределенияОплат.Добавить();
			Стр.ВидДолга =Выборка.Ссылка; 
		КонецЦикла;	
	КонецЕСли;
КонецФункции


